$grid-gutter-width: 30px !default;

$grid-columns: 12 !default;

$screen-tablet-min: 768px !default;

$screen-desktop-min: 1024px !default;

$screen-mobile-max: ($screen-tablet-min - 1) !default;

$screen-tablet-max: ($screen-desktop-min - 1) !default;

$container-tablet: ((680px + $grid-gutter-width)) !default;

$container-desktop: ((960px + $grid-gutter-width)) !default;

$container-md: $container-desktop !default;

$container-large-desktop: ((1140px + $grid-gutter-width)) !default;

$container-lg: $container-large-desktop !default;

@mixin make-row($gutter: $grid-gutter-width) {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
}


@mixin make-grid-columns() {
  $list: '';
  $i: 1;
  $list: ".mobile-#{$i}, .tablet-#{$i}, .Desktop-#{$i}";

  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list},.mobile-#{$i}, .tablet-#{$i}, .Desktop-#{$i}";
  }

  #{$list} {
    position: relative;
    min-height: 1px;
    padding-left: ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
  }
}

@mixin flex-grid-columns($class) {
  $list: '';
  $i: 1;
  $list: ".#{$class}-#{$i}";

  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .#{$class}-#{$i}";
  }

  #{$list} {
    max-width: percentage(($i / $grid-columns));   
  }
}

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .#{$class}-#{$index} {
      max-width: percentage(($index / $grid-columns));
      flex-basis:  percentage(($index / $grid-columns));
    }
  } 
}

@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}

@mixin make-mobile-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (max-width: $screen-mobile-max) {
    // float: left;
    flex: 0 0 percentage(($columns / $grid-columns));
    max-width: percentage(($columns / $grid-columns));
    // width: percentage(($columns / $grid-columns));
  }
}


// Generate the small columns
@mixin make-tablet-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-tablet-min) {
    flex: 0 0 percentage(($columns / $grid-columns));
    max-width: percentage(($columns / $grid-columns));
    // float: left;
    // width: percentage(($columns / $grid-columns));
  }
}


// Generate the medium columns
@mixin make-desktop-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-desktop-min) {
    flex: 0 0 percentage(($columns / $grid-columns));
    max-width: percentage(($columns / $grid-columns));
  }
}

@mixin container-fixed() {
  margin-right: auto;
  margin-left: auto;
  padding-left:  ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
  // @include clearfix();
}


.container {
  @include container-fixed();

  @media (min-width: $screen-tablet-min) {
    width: $container-tablet;
  }
  @media (min-width: $screen-desktop-min) {
    width: $container-md;
  }
}

.row {
  @include make-row();
}



@mixin make-grid($class) {
  @include flex-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width);
  // @include loop-grid-columns($grid-columns, $class, pull);
  // @include loop-grid-columns($grid-columns, $class, push);
  // @include loop-grid-columns($grid-columns, $class, offset);
}

// @include make-grid(tablet);


@media (max-width: $screen-mobile-max ){
  @include make-grid(mobile);
}

@media (min-width: $screen-tablet-min) {
  @include make-grid(tablet);
}

@media (min-width: $screen-desktop-min) {
  @include make-grid(desktop);
}